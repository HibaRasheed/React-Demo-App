{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","className","style","backgroundColor","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","palceholder","value","onChange","target","checked","currentTarget","App","showAddTask","setshowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.daba3280.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\nconst Button = ({color,text,onClick}) => {\r\n\treturn(\r\n\t\t\t<button onClick={onClick} className=\"btn\" style={{backgroundColor: color}}>{text}</button>\r\n\t\t)\r\n} \r\n\r\n\r\nButton.defaultProps = {\r\n\tcolor:'steelblue'\r\n}\r\n\r\nButton.propTypes = {\r\n\r\n\ttext: PropTypes.string,\r\n\tcolor: PropTypes.string,\r\n\tonClick:PropTypes.func,\r\n}\r\n\r\nexport default Button","import PropTypes from 'prop-types'\r\nimport Button from './Button'\r\nconst Header = ({title,onAdd,showAdd}) => {\r\n\t\r\n\treturn(\r\n\t\t\t<header className=\"header\">\r\n\t\t\t\t<h1 > {title}</h1>\r\n\t\t\t\t<Button color = {showAdd ? 'red' : 'green'} text = {showAdd ? 'Close' : 'Add'} onClick={onAdd}\r\n\t\t\t\t/>\r\n\t\t\t</header>\r\n\r\n\t\t)\r\n}\r\n\r\nHeader.defaultProps = {\r\n\ttitle:'Tasks '\r\n}\r\n\r\nHeader.propTypes = {\r\n\r\n\ttitle: PropTypes.string,\r\n}\r\n\r\n//css in JS\r\n//const headingStyle = {\r\n//\tcolor:'black',\r\n//\tbackgroundColor:'pink'\r\n//}\r\n\r\n\r\n\r\nexport default Header","import { FaTimes } from 'react-icons/fa'\r\nconst Task =({task,onDelete,onToggle}) => {\r\n \r\n\treturn(\r\n\t\t\t<div className={`task ${task.reminder ? 'reminder' :''}`} onDoubleClick={() => onToggle(task.id)}>\r\n\t\t\t\t<h3>{task.text}<FaTimes style={{color:'red',cursor:'pointer'}} onClick={()=>onDelete(task.id)}/></h3>\r\n\t\t\t\t<p>{task.day}</p>\r\n\t\t\t</div>\r\n\t\t)\r\n\r\n}\r\n\r\nexport default Task","\r\nimport Task from './Task'\r\nconst Tasks =({tasks,onDelete,onToggle}) => {\r\n \r\n\treturn(\r\n\t\t\t<>\r\n\t\t\t\t{tasks.map((task)=> (\r\n\r\n\t\t\t\t\t\t<Task key={task.id} task={task} onDelete={onDelete} onToggle={onToggle}/>\r\n\r\n\t\t\t\t\t))\r\n\t\t\t\t}\r\n\t\t\t</>\r\n\t\t)\r\n\r\n}\r\n\r\nexport default Tasks","import {useState} from 'react'\r\n\r\nconst AddTask =({onAdd})=>{\r\n\t\r\n\tconst[text,setText] = useState('')\r\n\tconst[day,setDay] = useState('')\r\n\tconst[reminder,setReminder] = useState(false)\r\n\r\n\tconst onSubmit = (e) =>\r\n\t{\r\n\t\te.preventDefault()\r\n\r\n\t\tif(!text)\r\n\t\t{\r\n\t\t\talert('Please add a task')\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tonAdd({text,day,reminder})\r\n\t\t\r\n\t\tsetText('')\r\n\t\tsetDay('')\r\n\t\tsetReminder(false)\r\n\r\n\t}\r\n\r\n\treturn(\r\n\t\t    <form className ='add-form' onSubmit={onSubmit}>\r\n\t\t    \t\r\n\t\t    \t<div className='form-control'>\r\n\t\t    \t\t<label>Task</label>\r\n\t\t    \t\t<input type='text' palceholder='Add Task' value={text} onChange={(e)=>setText(e.target.value)}/>\r\n\t\t    \t</div>\r\n\t\t    \t\r\n\t\t    \t<div className='form-control'>\r\n\t\t    \t\t<label>Day n Time</label>\r\n\t\t    \t\t<input type='text' palceholder='Add Day & Time'value={day} onChange={(e)=>setDay(e.target.value)}/>\r\n\t\t    \t</div>\r\n\t\t    \t\r\n\t\t    \t<div className='form-control form-control-check '>\r\n\t\t    \t\t<label>Reminder</label>\r\n\t\t    \t\t<input type='checkbox' checked={reminder} value={reminder} onChange={(e)=>setReminder(e.currentTarget.checked)}/>\r\n\t\t    \t</div>\r\n\t\t    \t<input type='submit' value='Save Task' className='btn btn-block'/>\r\n\t\t    </form>\r\n\r\n\t\t)\r\n}\r\n\r\nexport default AddTask","//import React from 'react'\nimport {useState} from 'react'\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n\nfunction App() {\n \n  const [showAddTask,setshowAddTask]= useState(false)\n \n  const [tasks,setTasks] = useState([\n        {\n          id:1,\n          text:\"Doctors Appointment\",\n          day:\"Dec 2 at 5:43pm\",\n          reminder:true,\n        },\n        {\n          id:2,\n          text:\"Meeting at office\",\n          day:\"Dec 5 at 5:43pm\",\n          reminder:true,\n        },\n        {\n          id:3,\n          text:\"Shopping\",\n          day:\"Dec 2 at 5:43pm\",\n          reminder:false,\n        }\n        ])  \n\n//For Add Tasks\n\nconst addTask =(task) => \n{\n  //console.log(task)\n  const id= Math.floor(Math.random()*10000)+1\n  const newTask = {id,...task}\n  setTasks([...tasks,newTask])\n\n}\n\n\n//For Delete  Task\nconst deleteTask =(id) => {\n  \n  setTasks(tasks.filter((task)=> task.id !== id))\n}\n\n//For toggle Tasks\nconst toggleReminder =(id) => {\n  setTasks(\n      tasks.map((task)=>\n                task.id === id ? { ...task, reminder:!task.reminder} : task\n               )\n\n    )\n}\n\n  return (\n   <div className=\"container\">\n     \n      <Header onAdd={()=> setshowAddTask(!showAddTask)} showAdd={showAddTask} />\n      {showAddTask && <AddTask onAdd={addTask}/>}\n      {tasks.length > 0 ? (<Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder}/>) :('No Tasks to show')}\n    </div>\n\n   );\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}